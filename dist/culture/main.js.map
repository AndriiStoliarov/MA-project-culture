{"version":3,"sources":["./src/app/shared/components/main-layout/main-layout.component.ts","./src/app/shared/components/main-layout/main-layout.component.html","./src/app/shared/components/posts/posts.component.ts","./src/app/shared/components/posts/posts.component.html","./src/app/shared/components/index.ts","./src/app/shared/services/need.service.ts","./src/app/shared/pipes/index.ts","./src/environments/environment.ts","./src/app/post-page/post-page.component.html","./src/app/post-page/post-page.component.ts","./src/app/shared/components/need/need.component.ts","./src/app/shared/components/need/need.component.html","./src/app/home-page/home-page.component.ts","./src/app/home-page/home-page.component.html","./src/app/about-page/about-page.component.ts","./src/app/about-page/about-page.component.html","./src/app/shared/services/auth.service.ts","./src/app/poster-page/poster-page.component.ts","./src/app/poster-page/poster-page.component.html","./src/app/shared/pipes/search-title.pipe.ts","./src/app/shared/index.ts","./src/app/user/shared/services/event.service.ts","./src/app/shared/components/proposal/proposal.component.html","./src/app/shared/components/proposal/proposal.component.ts","./src/app/shared/services/registration.service.ts","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/services/categories.service.ts","./src/app/user/shared/services/index.ts","./src/app/shared/components/registration-message/registration-message.component.ts","./src/app/shared/components/registration-message/registration-message.component.html","./src/app/user/shared/services/proposal.service.ts","./src/app/shared/services/posts.service.ts","./src/app/app.module.ts","./src/app/shared/services/index.ts","./src/app/shared/services/user.resolver.ts","./src/app/shared/components/need-form/need-form.component.ts","./src/app/shared/components/need-form/need-form.component.html","./src/app/shared/components/post/post.component.html","./src/app/shared/components/post/post.component.ts","./src/app/shared/components/registration-page/registration-page.component.ts","./src/app/shared/components/registration-page/registration-page.component.html","./src/app/shared/components/proposal-message/proposal-message.component.ts","./src/app/shared/components/proposal-message/proposal-message.component.html","./src/app/app-routing.module.ts","./src/app/shared/services/auth.interceptor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/user/shared/services';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RegistrationPageComponent } from '../registration-page/registration-page.component';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.css'],\n})\nexport class MainLayoutComponent implements OnInit {\n\n  hiding = false;\n  firstName = '';\n  lastName = '';\n\n  constructor(\n    private dialog: MatDialog,\n    private router: Router,\n    private authService: AuthService,\n  ) {\n    // tslint:disable-next-line: deprecation\n    this.router.events.subscribe(() => {\n      this.hiding = this.authService.isAuthenticated();\n      this.firstName = this.authService.user?.first_name;\n      this.lastName = this.authService.user?.last_name;\n    });\n  }\n\n  ngOnInit(): void { }\n\n  openDialog(): void {\n    this.dialog.open(RegistrationPageComponent);\n  }\n\n  logout(): void {\n    this.authService.logout();\n    this.router.navigate(['/user', 'login']);\n  }\n\n  isNavigate(): void {\n    if (this.authService.isAuthenticated()) {\n      this.router.navigate(['/user', 'event']);\n    } else {\n      this.openDialog();\n    }\n  }\n\n}\n","<header>\n  <mat-toolbar color=\"primary\">\n\n    <button mat-button [matMenuTriggerFor]=\"menu\">\n      <mat-icon>menu</mat-icon>\n    </button>\n\n    <mat-menu #menu=\"matMenu\">\n      <a mat-menu-item routerLink=\"/poster\">Афіша</a>\n      <a mat-menu-item routerLink=\"/about\">О нас</a>\n    </mat-menu>\n\n    <a href=\"/\" class=\"header-title\">Чівент</a>\n\n    <span class=\"spacer\"></span>\n\n    <span *ngIf=\"hiding\">{{ firstName }} {{ lastName }}</span>\n\n    <mat-list *ngIf=\"hiding\">\n      <mat-list-item>\n        <a\n          mat-icon-button\n          class=\"navigation-link\"\n          routerLink=\"/user/posts\"\n        >\n          <mat-icon>person</mat-icon>\n        </a>\n      </mat-list-item>\n    </mat-list>\n\n    <mat-list *ngIf=\"hiding\">\n      <mat-list-item>\n        <a\n          mat-icon-button\n          class=\"navigation-link\"\n          (click)=\"logout()\"\n          aria-label=\"exit-to-app\"\n        >\n          <mat-icon>logout</mat-icon>\n        </a>\n      </mat-list-item>\n    </mat-list>\n\n    <mat-list *ngIf=\"!hiding\">\n      <mat-list-item>\n        <a\n          mat-icon-button\n          class=\"navigation-link\"\n          aria-label=\"exit-to-app\"\n          routerLink=\"/user/login\"\n        >\n          <mat-icon>login</mat-icon>\n        </a>\n      </mat-list-item>\n      <mat-list-item *ngIf=\"!hiding\">\n        <a\n          mat-icon-button\n          aria-label=\"person-add\"\n          (click)=\"openDialog()\"\n        >\n          <mat-icon>person_add</mat-icon>\n        </a>\n      </mat-list-item>\n    </mat-list>\n\n  </mat-toolbar>\n</header>\n\n<div class=\"button-container\">\n  <a\n    mat-fab\n    color=\"primary\"\n    (click)=\"isNavigate()\"\n    aria-label=\"add new event\"\n  >\n    <mat-icon>add</mat-icon>\n  </a>\n</div>\n\n<div class=\"wrapper\">\n  <router-outlet></router-outlet>\n</div>\n","import { Component, OnDestroy, OnInit} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { PageEvent } from '@angular/material/paginator';\n\nimport { AuthService, PostsService } from '../../services';\nimport { Post, Records } from '../../types';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css'],\n})\nexport class PostsComponent implements OnInit, OnDestroy{\n\n  length = 0;\n  pageSize = 6;\n  pageIndex = 0;\n  pageSizeOptions = [3, 6, 12, 48];\n  showFirstLastButtons = true;\n\n  posts: Post[] = [];\n  loading = false;\n  searchStr = '';\n  paginationPosts: Post[] = [];\n\n  private records: Records[] = [];\n  private subscription: Subscription = new Subscription();\n\n  constructor(\n    private authService: AuthService,\n    private postsService: PostsService,\n  ) { }\n\n  ngOnInit(): void {\n    this.subscription\n      .add(this.getPosts());\n  }\n\n  private getPosts(): Subscription {\n    return this.postsService.getPosts().subscribe((record: Records) => {\n      this.records.push(record);\n      this.posts = this.records[0].records;\n      this.paginationPosts = this.posts.slice(0, this.pageSize);\n      this.length = this.posts.length;\n      this.loading = true;\n    });\n  }\n\n  handlePageEvent(event: PageEvent): void {\n    this.length = event.length;\n    this.pageSize = event.pageSize;\n    this.pageIndex = event.pageIndex;\n\n    const startIndex = event.pageIndex * event.pageSize;\n\n    let endIndex = startIndex + event.pageSize;\n\n    if (endIndex > this.posts.length) {\n      endIndex = this.posts.length;\n    }\n\n    this.paginationPosts = this.posts.slice(startIndex, endIndex);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  handleCreateEvent(): void {\n    this.authService.isAuthenticated();\n  }\n}\n","<div class=\"wrapper\" *ngIf=\"loading; else loader\">\n  <mat-form-field\n    appearance=\"legacy\"\n    class=\"left-margin\"\n  >\n    <mat-label for=\"serchCaption\">пошук за назвою</mat-label>\n    <input\n      matInput\n      id=\"serchCaption\"\n      [(ngModel)]=\"searchStr\"\n    >\n    <mat-icon matSuffix>search</mat-icon>\n  </mat-form-field>\n\n  <div class=\"flex-container\">\n    <app-post\n      *ngFor=\"let post of paginationPosts | searchTitle:searchStr\"\n      [post]=\"post\"\n    ></app-post>\n  </div>\n\n  <mat-paginator\n    (page)=\"handlePageEvent($event)\"\n    [length]=\"length\"\n    [pageSize]=\"pageSize\"\n    [pageSizeOptions]=\"pageSizeOptions\"\n    [showFirstLastButtons]=\"showFirstLastButtons\"\n    [pageIndex]=\"pageIndex\">\n  </mat-paginator>\n</div>\n\n<ng-template #loader>\n  <mat-spinner class=\"center-margin\"></mat-spinner>\n</ng-template>\n\n\n","export { MainLayoutComponent } from './main-layout/main-layout.component';\nexport { PostComponent } from './post/post.component';\nexport { RegistrationPageComponent } from './registration-page/registration-page.component';\nexport { PostsComponent } from './posts/posts.component';\nexport { NeedFormComponent } from './need-form/need-form.component';\nexport { NeedComponent } from './need/need.component';\nexport { RegistrationMessageComponent } from './registration-message/registration-message.component';\nexport { ProposalComponent } from './proposal/proposal.component';\nexport { ProposalMessageComponent } from './proposal-message/proposal-message.component';\n","\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Proposal } from '../types';\n\n@Injectable({ providedIn: 'root' })\nexport class NeedService {\n  ROOT_URL = 'http://52.57.253.240:3000/api/proposals';\n\n  constructor(private http: HttpClient) { }\n\n  postData(data: Proposal): Observable<any> {\n    const body = JSON.stringify(data);\n\n    return this.http.post<Proposal>(this.ROOT_URL, body);\n  }\n\n}\n","export { SearchTitlePipe } from './search-title.pipe';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"wrapper\">\n  <div *ngIf=\"post$ | async as post; else loader\">\n    <mat-card class=\"bottom-margin\">\n      <mat-card-header class=\"flex-card-header\">\n        <mat-card-title>{{ post.title }}</mat-card-title>\n          <mat-card-actions>\n            <button\n              mat-stroked-button\n              routerLink='/home'\n              (click)='isNavigate()'\n              color=\"primary\"\n            >\n            Назад\n            </button>\n          </mat-card-actions>\n      </mat-card-header>\n\n      <div class=\"flex-container\">\n        <mat-card class=\"width-card bottom-margin\">\n          <div *ngIf=\"post.image_url; else placeholder\">\n            <img\n              mat-card-image\n              [src]=\"post.image_url\"\n              alt=\"Photo of a event\"\n            >\n          </div>\n        </mat-card>\n\n        <mat-card class=\"left-margin width-card bottom-margin\">\n          <mat-card-subtitle>{{ post.starts_at | date: 'MMMM dd, yyyy, hh:mm.' }}</mat-card-subtitle>\n          <mat-card-subtitle>{{ post.location }}</mat-card-subtitle>\n          <mat-card-content>\n            <p>{{ post.body }}</p>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </mat-card>\n    <app-need\n      *ngFor=\"let requirement of post.requests\"\n      [requirement]=\"requirement\"\n      [postUserId]=\"post.user_id\"\n    >\n    </app-need>\n  </div>\n</div>\n\n<ng-template #loader>\n  <mat-spinner class=\"center-margin\"></mat-spinner>\n</ng-template>\n\n<ng-template #placeholder>\n  <img\n    mat-card-image\n    src=\"assets/images/post-placeholder.jpg\"\n    alt=\"Photo of a event\"\n  >\n</ng-template>\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { PostsService } from '../shared/services';\nimport { Post } from '../shared/types';\n\n@Component({\n  selector: 'app-post-page',\n  templateUrl: './post-page.component.html',\n  styleUrls: ['./post-page.component.css'],\n})\nexport class PostPageComponent implements OnInit {\n\n  post$: Observable<Post>;\n\n  constructor(\n    private route: ActivatedRoute,\n    private postsService: PostsService,\n    private location: Location,\n  ) { }\n\n  ngOnInit(): void {\n    const postId = +this.route.snapshot.params.id;\n    this.post$ = this.postsService.post$;\n    this.postsService.getById(postId).subscribe();\n  }\n\n  isNavigate(): void {\n    this.location.back();\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'src/app/user/shared/services';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Requirement } from '../../types';\nimport { NeedFormComponent } from '../need-form/need-form.component';\nimport { RegistrationPageComponent } from '../registration-page/registration-page.component';\n\n@Component({\n  selector: 'app-need',\n  templateUrl: './need.component.html',\n  styleUrls: ['./need.component.css'],\n})\nexport class NeedComponent implements OnInit {\n\n  @Input() requirement: Requirement;\n  @Input() postUserId: number;\n  private postId: number = null;\n  isAuthenticated = false;\n  isUser = false;\n\n  constructor(\n    private authService: AuthService,\n    private dialog: MatDialog,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    this.postId = +this.route.snapshot.params.id;\n    this.isAuthenticated = this.authService.isAuthenticated();\n    this.isUser = this.postUserId === this.authService.isUserId();\n  }\n\n  openDialog(): void {\n    this.dialog.open(NeedFormComponent, {\n      data: {\n        description: this.requirement.description,\n        id: this.requirement.id,\n        postId: this.postId,\n      },\n    });\n  }\n\n  isNavigate(): void {\n    if (this.isAuthenticated) {\n      this.openDialog();\n    } else {\n      this.dialog.open(RegistrationPageComponent);\n    }\n  }\n}\n","<mat-card class=\"margin-card\">\n  <div class=\"flex-card\">\n    <span>{{ requirement.description }}</span>\n\n      <button\n        *ngIf=\"!isUser\"\n        mat-flat-button\n        (click)=\"isNavigate()\"\n        color=\"primary\"\n      >\n      Запропонувати\n      </button>\n  </div>\n\n  <ng-container *ngIf=\"isUser\">\n    <ng-container *ngIf=\"isAuthenticated\">\n      <app-proposal\n        *ngFor=\"let userProposal of requirement.proposals\"\n        [userProposal]=\"userProposal\"\n      >\n      </app-proposal>\n    </ng-container>\n  </ng-container>\n</mat-card>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css'],\n})\nexport class HomePageComponent { }\n\n","<app-posts></app-posts>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about-page',\n  templateUrl: './about-page.component.html',\n  styleUrls: ['./about-page.component.css'],\n})\nexport class AboutPageComponent { }\n","<div class=\"wrapper\">\n  <mat-card class=\"card\">\n      <mat-card-actions class=\"flex-card\">\n        <button\n          mat-stroked-button\n          routerLink=\"/\"\n          color=\"primary\"\n        >Назад</button>\n      </mat-card-actions>\n    <mat-card-content class=\"align-card-content line-height-content\">\n      <p>\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Laudantium ducimus mollitia praesentium adipisci esse ad ipsa voluptatem repellendus assumenda qui, perspiciatis, quod quidem possimus. Magni commodi impedit nobis eos voluptatum!\n      Nobis reprehenderit odit assumenda porro, voluptates quae ipsa quidem nam? In sit tenetur, corporis veniam obcaecati assumenda fugiat impedit modi perspiciatis consequatur, autem molestias ullam asperiores iure aperiam accusantium repellendus.\n      Adipisci, et! Non suscipit nobis excepturi dignissimos, ut necessitatibus ullam quidem vel quos at vero illum libero! Voluptatem iusto ipsam inventore totam odit tempore eius reiciendis optio eveniet, delectus eos.\n      </p>\n    </mat-card-content>\n  </mat-card>\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { AuthResponse, LoginParams, User, UserResponse } from '../types';\n\n@Injectable()\nexport class AuthService {\n  HOST = 'http://52.57.253.240:3000';\n  AUTH_URL = '/api/auth';\n  USER_URL = '/api/me';\n  LOCAL_STORAGE_TOKEN_KEY = 'token';\n\n  error$: Subject<string> = new Subject<string>();\n\n  authToken: string;\n  user: User;\n\n  private response: AuthResponse;\n\n  constructor(private http: HttpClient) {\n    this.authToken = this.tokenFromLocalStorage;\n  }\n\n  get tokenFromLocalStorage(): string {\n    return localStorage.getItem(this.LOCAL_STORAGE_TOKEN_KEY);\n  }\n\n  login(params: LoginParams): Observable<AuthResponse> {\n    return this.http.post<AuthResponse>(`${this.HOST}${this.AUTH_URL}`, params)\n      .pipe(\n        tap((response) => {\n        this.setToken(response);\n        },\n        catchError(this.handleError.bind(this)),\n      ));\n  }\n\n  logout(): void {\n    localStorage.clear();\n    this.user = null;\n    this.response = null;\n    this.authToken = null;\n  }\n\n  isAuthenticated(): boolean {\n    return !!this.authToken;\n  }\n\n  getUserByToken(): Observable<UserResponse> {\n    return this.http.get<UserResponse>(`${this.HOST}${this.USER_URL}`).pipe(\n      tap((response) => {\n        this.user = response.user;\n      }),\n    );\n  }\n\n  private handleError(error: HttpErrorResponse): Observable<any> {\n    const message = error.error.error;\n\n    switch (message) {\n      case 'Invalid email or password.':\n        this.error$.next('Невірна адреса електронної пошти або пароль.');\n        break;\n    }\n\n    return throwError(error);\n  }\n\n  private setToken(response: AuthResponse | null): void {\n    if (response) {\n      localStorage.setItem(this.LOCAL_STORAGE_TOKEN_KEY, response.token);\n    } else {\n      localStorage.clear();\n    }\n\n    this.response = response;\n    this.user = response?.user;\n    this.authToken = response?.token;\n  }\n\n  isUserId(): number {\n    if (this.user) {\n      return this.user.id;\n    } else {\n      return 0;\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-poster-page',\n  templateUrl: './poster-page.component.html',\n  styleUrls: ['./poster-page.component.css'],\n})\nexport class PosterPageComponent { }\n","<app-posts></app-posts>\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { Post } from '../types';\n\n@Pipe({ name: 'searchTitle' })\nexport class SearchTitlePipe implements PipeTransform {\n  transform(posts: Post[], search = ''): Post[] {\n    if (!search.trim()) {\n      return posts;\n    }\n\n    return posts.filter((post) => {\n      return post.title.toLowerCase().includes(search.toLowerCase());\n    });\n  }\n\n}\n","export * from './shared.module';\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Event } from '../../../shared/types';\n\n@Injectable({ providedIn: 'root' })\nexport class EventService {\n  ROOT_URL = 'http://52.57.253.240:3000/api/events';\n\n  constructor(private http: HttpClient) { }\n\n  postData(data: Event): Observable<any> {\n    const body = JSON.stringify(data);\n\n    return this.http.post<Event>(this.ROOT_URL, body);\n  }\n\n}\n","<div *ngIf=\"userProposal\">\n  <mat-card class=\"flex-container bottom-margin\">\n    <p>\n      {{ userProposal.description }} {{ userProposal.price_cents }} <span>грн.</span>\n    </p>\n\n    <div class=\"flex-button\">\n      <a\n        mat-button\n        href=\"tel:+3{{ userProposal.phone_number }}\"\n        color=\"primary\"\n      >Подзвонити\n      </a>\n      <button\n        class=\"bottom-margin\"\n        mat-flat-button\n        color=\"primary\"\n      >\n      Підтвердити\n      </button>\n      <button\n        mat-button\n        color=\"warn\"\n      >\n      Відхилити\n      </button>\n    </div>\n  </mat-card>\n</div>\n","import { Component, Input } from '@angular/core';\n\nimport { Proposal } from '../../types';\n\n@Component({\n  selector: 'app-proposal',\n  templateUrl: './proposal.component.html',\n  styleUrls: ['./proposal.component.css'],\n})\nexport class ProposalComponent {\n\n  @Input() userProposal: Proposal;\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { User } from '../types';\nimport { SignUpParams } from '../types/params/signUpParams.interface';\n\n@Injectable({ providedIn: 'root' })\nexport class RegistrationService {\n  ROOT_URL = 'http://52.57.253.240:3000/api/users';\n\n  constructor(private http: HttpClient) {}\n\n  createUser(data: SignUpParams): Observable<User> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n       'Content-Type':  'application/json',\n      }),\n    };\n\n    const body = JSON.stringify(data);\n\n    return this.http.post<User>(this.ROOT_URL, body, httpOptions);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { NeedComponent, NeedFormComponent, PostComponent, PostsComponent, ProposalComponent } from './components';\nimport { SearchTitlePipe } from './pipes';\n\nconst matModules = [\n  MatSliderModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatButtonModule,\n  MatMenuModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatDialogModule,\n  MatPaginatorModule,\n  MatProgressSpinnerModule,\n  MatSelectModule,\n  MatSnackBarModule,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule,\n    ...matModules,\n  ],\n  declarations: [\n    NeedFormComponent,\n    NeedComponent,\n    PostComponent,\n    PostsComponent,\n    SearchTitlePipe,\n    NeedComponent,\n    ProposalComponent,\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    PostComponent,\n    PostsComponent,\n    SearchTitlePipe,\n    RouterModule,\n    NeedComponent,\n    NeedFormComponent,\n    ProposalComponent,\n    ...matModules,\n  ],\n })\n export class SharedModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'angular-culture-cheevent';\n}\n","<!-- <app-event-form></app-event-form> -->\n<router-outlet></router-outlet>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Category } from '../types';\n\n@Injectable({ providedIn: 'root' })\nexport class CategoriesService {\n\n  ROOT_URL = 'http://52.57.253.240:3000/api/categories';\n\n  constructor(private http: HttpClient) {}\n\n  getCategories(): Observable<Category[]> {\n    return this.http.get<Category[]>(this.ROOT_URL).pipe(\n      map((response) => response),\n    );\n  }\n\n}\n","export { EventService } from './event.service';\nexport { AuthService } from '../../../shared/services/auth.service';\nexport { ProposalService } from './proposal.service';\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-registration-message',\n  templateUrl: './registration-message.component.html',\n  styleUrls: ['./registration-message.component.css'],\n})\nexport class RegistrationMessageComponent { }\n","<span class=\"message-color\">\n  Ви успішно зареєструвалися.\n</span>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Proposal } from '../../../shared/types';\n\n@Injectable({ providedIn: 'root' })\nexport class ProposalService {\n  ROOT_URL = 'http://52.57.253.240:3000/api/proposals';\n\n  constructor(private http: HttpClient) {}\n\n  getProposalById(id: number): Observable<Proposal> {\n    return this.http.get<Proposal>(`http://52.57.253.240:3000/api/proposals/${id}.json`).pipe(\n      map((proposal: Proposal) => proposal),\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { Post, Records } from '../types';\n\n@Injectable({ providedIn: 'root' })\nexport class PostsService {\n  post$: BehaviorSubject<Post> = new BehaviorSubject<Post>(null);\n\n  ROOT_URL = 'http://52.57.253.240:3000/api/events';\n\n  constructor(private http: HttpClient) {}\n\n  getPosts(): Observable<Records> {\n    return this.http.get<Records>(this.ROOT_URL).pipe(\n      map((response) => response),\n    );\n  }\n\n  getById(id: number): Observable<Post> {\n    return this.http.get<Post>(`http://52.57.253.240:3000/api/events/${id}.json`).pipe(\n      map((post: Post) => post),\n      tap((post: Post) => this.post$.next(post)),\n    );\n  }\n\n}\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AboutPageComponent } from './about-page/about-page.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { PostPageComponent } from './post-page/post-page.component';\nimport { PosterPageComponent } from './poster-page/poster-page.component';\nimport { SharedModule } from './shared';\nimport { MainLayoutComponent, RegistrationPageComponent } from './shared/components';\nimport { mainServices } from './shared/services';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainLayoutComponent,\n    HomePageComponent,\n    PosterPageComponent,\n    AboutPageComponent,\n    PostPageComponent,\n    RegistrationPageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    SharedModule,\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [\n    ...mainServices,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AuthInterceptor } from './auth.interceptor';\nimport { AuthService } from './auth.service';\nimport { UserResolverService } from './user.resolver';\n\nexport const mainServices = [\n  AuthService,\n  UserResolverService,\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n];\n\nexport * from './auth.service';\nexport * from './auth.interceptor';\nexport * from './categories.service';\nexport * from './need.service';\nexport * from './posts.service';\nexport * from './registration.service';\nexport * from './user.resolver';\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\nimport { UserResponse } from '../types';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class UserResolverService implements Resolve<any> {\n  constructor(private authService: AuthService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<UserResponse | null> {\n    return this.authService.tokenFromLocalStorage\n      ? this.authService.getUserByToken()\n      : of(null);\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\n\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\n\nimport { NeedService, PostsService } from '../../services';\nimport { Proposal, Requirement } from '../../types';\nimport { ProposalMessageComponent } from '../proposal-message/proposal-message.component';\n\n@Component({\n  selector: 'app-need-form',\n  templateUrl: './need-form.component.html',\n  styleUrls: ['./need-form.component.css'],\n})\nexport class NeedFormComponent implements OnInit {\n\n  needForm: any;\n  durationInSeconds = 5;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<NeedFormComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Requirement & { postId: number },\n    private needService: NeedService,\n    private postsService: PostsService,\n    private matSnackBar: MatSnackBar,\n  ) { }\n\n  ngOnInit(): void {\n    this.needForm = this.fb.group ({\n      request_id: new FormControl(''),\n      description: new FormControl('', [\n        Validators.required,\n      ]),\n      price_cents: new FormControl('', [\n        Validators.required,\n      ]),\n      phone_number: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^\\d{10}$/),\n      ]),\n    });\n  }\n\n  isControlInvalid(fieldName: string): boolean {\n    return (this.needForm.get(fieldName).invalid\n      && (this.needForm.get(fieldName).dirty\n      || this.needForm.get(fieldName).touched));\n  }\n\n  getControlError(controlName: string): string | null {\n    const control = this.needForm.get(controlName);\n    if (control.errors.required) {\n      return 'Поле не може бути порожнім';\n    }\n\n    if (control.errors.pattern !== /^\\d{10}$/) {\n      return 'Введіть 10-значний номер';\n    }\n    return null;\n  }\n\n  submit(): void {\n    if (this.needForm.invalid) {\n      return;\n    }\n\n    this.needForm.controls.request_id.setValue(this.data.id);\n\n    const jsonData = this.needForm.value;\n\n    this.needService.postData(jsonData).subscribe((response: Proposal) => {\n      this.postsService.getById(this.data.postId).subscribe();\n      this.dialogRef.close();\n      this.matSnackBar.openFromComponent(ProposalMessageComponent, {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition,\n      });\n    });\n  }\n\n}\n","<div class=\"wrapper\">\n   <h1 mat-dialog-title>{{ data.description }}</h1>\n  <hr>\n  <form\n    [formGroup]=\"needForm\"\n    class=\"flex-form\"\n    #form\n  >\n    <mat-form-field\n      class=\"width-field\"\n      appearance=\"legacy\"\n    >\n      <mat-label>Опишіть вашу пропозицію</mat-label>\n      <input\n        matInput\n        formControlName=\"description\"\n        required\n      >\n      <mat-icon matSuffix>mode_edit</mat-icon>\n      <mat-error\n        *ngIf=\"isControlInvalid('description')\"\n        class=\"validation\"\n      >\n      {{ getControlError('description') }}\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"legacy\">\n      <mat-label>Ціна</mat-label>\n      <input\n        matInput\n        type=\"number\"\n        formControlName=\"price_cents\"\n        required\n      >\n      <span matPrefix>₴&nbsp;</span>\n      <mat-icon matSuffix>money</mat-icon>\n      <mat-error\n        *ngIf=\"isControlInvalid('price_cents')\"\n        class=\"validation\"\n        required\n        pattern\n      >\n      {{ getControlError('price_cents') }}\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"legacy\">\n      <mat-label>№ мобільного телефону</mat-label>\n      <input\n        matInput\n        formControlName=\"phone_number\"\n        required\n        pattern\n      >\n      <mat-hint>номер для зворотнього зв'зку</mat-hint>\n      <mat-icon matSuffix>phone_iphone</mat-icon>\n      <mat-error\n        *ngIf=\"isControlInvalid('phone_number')\"\n        class=\"validation\"\n      >\n      {{ getControlError('phone_number') }}\n      </mat-error>\n    </mat-form-field>\n  </form>\n\n  <div\n    mat-dialog-actions\n    class=\"flex-button\"\n  >\n    <button\n      mat-button\n      color=\"primary\"\n      mat-dialog-close\n      (click)=\"form.clo\"\n\n    >\n    Закрити\n    </button>\n    <button\n      mat-button\n      color=\"warn\"\n      (click)=\"form.reset()\"\n    >\n    Скинути\n    </button>\n    <button\n      mat-flat-button\n      color=\"primary\"\n      (click)=\"submit()\"\n      [disabled]=\"needForm.invalid\"\n    >\n    Надіслати\n    </button>\n  </div>\n</div>\n","<mat-card class=\"card\">\n  <mat-card-header>\n    <div mat-card-avatar></div>\n    <mat-card-title class=\"title-height\">{{ post.title }}</mat-card-title>\n  </mat-card-header>\n\n  <div *ngIf=\"post.image_url; else placeholder\">\n      <img\n        mat-card-image\n        class=\"image-height\"\n        [src]=\"post.image_url\"\n        alt=\"Photo of a event\"\n      >\n  </div>\n\n  <mat-card-actions class=\"flex-button\">\n    <button\n      mat-button\n      color=\"primary\"\n    >\n      {{ post.category.name }}\n    </button>\n\n    <button\n      mat-flat-button\n      [routerLink]=\"['/posts', post.id]\"\n      color=\"primary\"\n    >Детальніше</button>\n  </mat-card-actions>\n</mat-card>\n\n<ng-template #placeholder>\n  <div>\n    <img\n      mat-card-image\n      class=\"image-height\"\n      src=\"../../../../assets/images/post-placeholder.jpg\"\n      alt=\"Photo of a event\"\n    >\n  </div>\n</ng-template>\n\n<ng-template #loading>\n  <mat-spinner class=\"center-margin\"></mat-spinner>\n</ng-template>\n","import { Component, Input } from '@angular/core';\n\nimport { Post } from '../../types';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css'],\n})\nexport class PostComponent {\n\n  @Input() post: Post;\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\n\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\n\nimport { RegistrationService } from '../../services';\nimport { SignUpParams } from '../../types/params/signUpParams.interface';\nimport { RegistrationMessageComponent } from '../registration-message/registration-message.component';\n\n@Component({\n  selector: 'app-registration-page',\n  templateUrl: './registration-page.component.html',\n  styleUrls: ['./registration-page.component.css'],\n})\nexport class RegistrationPageComponent implements OnInit {\n\n  registrationForm: any;\n  hide = true;\n  durationInSeconds = 5;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  constructor(\n    private registrationService: RegistrationService,\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<RegistrationPageComponent>,\n    private snackBar: MatSnackBar,\n  ) { }\n\n  ngOnInit(): void {\n    this.registrationForm = this.fb.group ({\n      first_name: new FormControl('', [\n        Validators.required,\n      ]),\n      last_name: new FormControl('', [\n        Validators.required,\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email,\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n      ]),\n    });\n  }\n\n  isControlInvalid(fieldName: string): boolean {\n    return (this.registrationForm.get(fieldName).invalid\n      && (this.registrationForm.get(fieldName).dirty\n      || this.registrationForm.get(fieldName).touched));\n  }\n\n  getControlError(controlName: string): string | null {\n    const control = this.registrationForm.get(controlName);\n    if (control.errors.required) {\n      return 'Поле не може бути порожнім';\n    }\n    if (control.errors.email) {\n      return 'Введіть правильну ел. адресу';\n    }\n    return null;\n  }\n\n  submit(): void {\n    if (this.registrationForm.invalid) {\n      return;\n    }\n\n    const data: SignUpParams = {\n      first_name: this.registrationForm.value.first_name,\n      last_name: this.registrationForm.value.last_name,\n      email: this.registrationForm.value.email,\n      password: this.registrationForm.value.password,\n    };\n\n    // tslint:disable-next-line: deprecation\n    this.registrationService.createUser(data).subscribe(() => {\n      this.dialogRef.close();\n      this.snackBar.openFromComponent(RegistrationMessageComponent, {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition,\n      });\n    });\n  }\n\n}\n","<div class=\"wrapper\">\n  <h1\n    mat-dialog-title\n    class=\"align-center\"\n  >\n  Зареєструватися\n  </h1>\n  <hr>\n  <form\n    [formGroup]=\"registrationForm\"\n    class=\"flex-form\"\n    #form\n  >\n    <mat-form-field appearance=\"legacy\">\n      <mat-label>Iм’я</mat-label>\n      <input\n        matInput\n        formControlName=\"first_name\"\n        required\n      >\n      <mat-icon matSuffix>face</mat-icon>\n      <mat-error\n        *ngIf=\"isControlInvalid('first_name')\"\n        class=\"validation\"\n      >\n      {{ getControlError('first_name') }}\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"legacy\">\n      <mat-label>Прізвище</mat-label>\n      <input\n        matInput\n        formControlName=\"last_name\"\n        required\n      >\n      <mat-icon matSuffix>face</mat-icon>\n      <mat-error\n        *ngIf=\"isControlInvalid('last_name')\"\n        class=\"validation\"\n      >\n      {{ getControlError('last_name') }}\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"legacy\">\n      <mat-label>Електронна пошта</mat-label>\n      <input\n        matInput\n        formControlName=\"email\"\n        required\n        email\n      >\n      <mat-icon matSuffix>alternate_email</mat-icon>\n      <mat-error\n        *ngIf=\"isControlInvalid('email')\"\n        class=\"validation\"\n      >\n      {{ getControlError('email') }}\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"legacy\">\n      <mat-label>Новий пароль</mat-label>\n      <input\n        matInput\n        [type]=\"hide ? 'password' : 'text'\"\n        formControlName=\"password\"\n        required\n      >\n      <button\n        mat-icon-button\n        matSuffix\n        (click)=\"hide = !hide\"\n        [attr.aria-label]=\"'Hide password'\"\n        [attr.aria-pressed]=\"hide\"\n      >\n        <mat-icon>{{ hide ? 'visibility_off' : 'visibility' }}</mat-icon>\n      </button>\n      <mat-error\n        *ngIf=\"isControlInvalid('password')\"\n        class=\"validation\"\n      >\n      {{ getControlError('password') }}\n      </mat-error>\n    </mat-form-field>\n  </form>\n\n  <div\n    mat-dialog-actions\n    class=\"flex-button\"\n  >\n    <button\n      mat-button\n      color=\"primary\"\n      mat-dialog-close\n    >\n    Закрити\n    </button>\n    <button\n      mat-button\n      color=\"warn\"\n      (click)=\"form.reset()\"\n    >\n    Скинути\n    </button>\n    <button\n      mat-flat-button\n      color=\"primary\"\n      (click)=\"submit()\"\n      [disabled]=\"registrationForm.invalid\"\n    >\n    Надіслати\n    </button>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-proposal-message',\n  templateUrl: './proposal-message.component.html',\n  styleUrls: ['./proposal-message.component.css'],\n})\nexport class ProposalMessageComponent { }\n","<span class=\"message-color\">\n  Ваша пропозиція успішно відправлена.\n</span>\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AboutPageComponent } from './about-page/about-page.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { PostPageComponent } from './post-page/post-page.component';\nimport { PosterPageComponent } from './poster-page/poster-page.component';\nimport { MainLayoutComponent } from './shared/components';\nimport { UserResolverService } from './shared/services';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainLayoutComponent,\n    resolve: { user: UserResolverService },\n    children: [\n      {path: '', redirectTo: 'home', pathMatch: 'full'},\n      {path: 'home', component: HomePageComponent},\n      {path: 'posts/:id', component: PostPageComponent},\n      // {path: 'poster', component: PosterPageComponent},\n      // {path: 'about', component: AboutPageComponent}\n      // {path: '**', redirectTo: 'home'}\n    ],\n  },\n  {\n    path: 'user',\n    resolve: { user: UserResolverService },\n    loadChildren: () => import('./user').then((m) => m.UserModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../../user/shared/services';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) { }\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler,\n  ): Observable<HttpEvent<any>> {\n    let headers = req.headers.set('Content-Type',  'application/json');\n\n    if (this.authService.tokenFromLocalStorage) {\n      headers = headers.set('Authorization', 'Bearer ' + this.authService.tokenFromLocalStorage);\n    }\n\n    const cloned = req.clone({ headers });\n    return next.handle(cloned);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}